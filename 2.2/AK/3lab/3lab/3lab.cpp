// 3lab.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
int getValue()
{
    while (true) // цикл продолжается до тех пор, пока пользователь не введёт корректное значение
    {
        std::cout << "Ведите целочисленное число: ";
        int a;
        std::cin >> a;
        // Проверка на предыдущее извлечение
        if (std::cin.fail()) // если предыдущее извлечение оказалось неудачным
        {
            std::cin.clear(); // то возвращаем cin в 'обычный' режим работы
            std::cin.ignore(32767, '\n'); // и удаляем значения предыдущего ввода из входного буфера
            std::cout << "К сожалению, ввод неверен. Пожалуйста, попробуйте еще раз.\n";
        }
        else
        {
            std::cin.ignore(32767, '\n'); // удаляем лишние значения
            return a;
        }
    }
}
int main() {
    setlocale(LC_ALL, "Rus");
    system("color F0");
    int z, x, y, DivZ = 0;
    std::cout << "Введите число а\n x = ";
    x = getValue();
    std::cout << "Введите число b\n y = ";
    y = getValue();
    _asm
    {
        mov eax, 0; перемещаем 0->eax
        mov ecx, 5
        imul ecx, x
        imul ecx, y

        cmp x, eax; сравниваем b с 0
        jle First; b < 0
        cmp y, eax; сравниваем х с 0
        jle First; проверка на условие ноль
        mov edx, x
        cmp edx, y; сравниваем b с 0
        jz Zero;
        imul edx, 5
        mov esi, y
        imul esi, 23
        add edx, esi
        mov ebx, x
        sub ebx, y
        mov eax, edx
        cdq; подготовка к делению
        idiv ebx;
        jmp OK

            Zero :
        mov DivZ, 1;
        jmp OK
       
        
    First: 
        mov eax, x;
        imul eax, x; x ^ 2
        mov ebx, y
        imul ebx, y
        imul ebx, y
        add eax, ebx

        jmp OK
        OK:
            add eax, ecx
            mov z, eax
    
    }
    if (DivZ == 1) {
        std::cout << "Деление на 0" << std::endl;
    }
    else {
        std::cout << z << std::endl;
    }

    return 0;
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
